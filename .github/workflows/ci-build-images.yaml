name: workflow-for-Go-app
on:
   push:
      branches:
        - main
   workflow_dispatch:
jobs:
  job1-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
         go-version:  '1.25.1'

      - name: Cache Go dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path:  |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: go mod tidy
        working-directory: fancy-adventure
      - name: Running tests
        run: go test ./... -v
        working-directory: fancy-adventure/
      - name: Build golangci-lint from source
        run: |
         git clone --depth 1 https://github.com/golangci/golangci-lint.git
         cd golangci-lint
         go build -o $(go env GOPATH)/bin/golangci-lint ./cmd/golangci-lint
         echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint
        run: GOTOOLCHAIN="" golangci-lint run
        working-directory: fancy-adventure

  job2-builder-docker-image:
     needs: job1-testing
     runs-on: ubuntu-latest
     env:
        DOCKER_REGISTRY: docker.io
        APP_NAME: go-name-app
     steps:
        - name: checkout the code
          uses: actions/checkout@v5
        - name: Check Docker version
          run: docker --version
        - name: Log in to Docker
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and Push Docker Image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: |
              ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest
              ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.sha }}

       
   